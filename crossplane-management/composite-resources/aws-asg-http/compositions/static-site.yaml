apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: static-site
  annotations:
    argocd.argoproj.io/sync-wave: "3"
spec:
  writeConnectionSecretsToNamespace: crossplane-argocd-demo
  compositeTypeRef:
    apiVersion: demo.io/v1alpha1
    kind: ASGHTTP
  resources:
  - name: launch-template
    base:
      apiVersion: ec2.aws.jet.crossplane.io/v1alpha2
      kind: LaunchTemplate
      spec:
        forProvider:
          imageId: 'ami-0a1ee2fb28fe05df3'
        providerConfigRef:
          name: 'aws-main-account'
    patches:
    - fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-launch-template"
    - fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.name
      transforms:
      - type: string
        string:
          fmt: "%s-launch-template"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
    - fromFieldPath: spec.parameters.html
      toFieldPath: spec.forProvider.userData
      transforms:
      - type: string
        string:
          fmt: |
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            echo "%s" > /var/www/html/index.html
      - type: string
        string:
          type: Convert
          convert: ToBase64
  - name: autoscaling-group
    base:
      apiVersion: autoscaling.aws.jet.crossplane.io/v1alpha2
      kind: AutoscalingGroup
      spec:
        forProvider:
          launchTemplate: []
          minSize: 1
          maxSize: 3
        providerConfigRef:
          name: 'aws-main-account'
    patches:
    - fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.launchTemplate[0].name
      transforms:
      - type: string
        string:
          fmt: "%s-launch-template"
    - fromFieldPath: metadata.name
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-asg"
    - fromFieldPath: metadata.name
      toFieldPath: spec.forProvider.name
      transforms:
      - type: string
        string:
          fmt: "%s-asg"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.region
      toFieldPath: spec.forProvider.region
